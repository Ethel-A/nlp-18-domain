# -*- coding: utf-8 -*-
"""qna

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LkZc21F9yG2hpWvHDgSRQO9tjanI-jVe
"""

from google.colab import files
uploaded = files.upload()

def trimmer(s):
    top = s.strip('\n');
    result = ''.join([i for i in top if not i.isdigit()])
    fin = result.replace(".", "", 1).strip('\t')
    fin = fin.lower()
    fin = re.sub(r'[^\w\s]','',fin)
    fin = fin.strip(' ')
    return fin

import re

def listed(filename):
  trimmed = []
  with open (filename) as loaded:
    listed = loaded.readlines()
    for line in listed:
      if line != "":
        stripped = trimmer(line)
        trimmed.append(stripped)
      else:
        continue
    return trimmed

#print(listed('Questions.txt'))

def counter():
  answers = listed('Answers.txt')
  ans = answers.count('ten')
  for i in range(len(answers)):
    if answers[i] == 'yes':
      answers[i] = 'Hello'
  return answers

from math import*
  
def jaccard_similarity(x,y):
  intersection_cardinality = len(set.intersection(*[set(x), set(y)]))
  union_cardinality = len(set.union(*[set(x), set(y)]))
  return intersection_cardinality/float(union_cardinality)

  
  
#print(jaccard_similarity('Who is the president','What is the name of the president'))

def qna_generator(test_file):
  questions = listed('Questions.txt')
  questions = questions[:-5]
  answers = listed('Answers.txt')
  print(len(questions))
#   tests = listed(test_file)
#   results = open('qa_results.txt', 'w+')
#   for line in tests:
#     vals = []
#     for line2 in questions:
#       val = jaccard_similarity(line, line2)
#       vals.append(val)
#     maximum = max(vals)
#     ans = vals.index(maximum)
#     answer = answers[ans]
#     results.write(answer)
#     results.write('\n')
#   results.close()
      
    
qna_generator('Questions.txt')